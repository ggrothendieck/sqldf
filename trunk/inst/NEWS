Version 0.4-0

o the heuristic which assigns classes to columns for the data frame output
  from sqldf has been improved

o method argument can now be a list of two transformations. The first
  component corresponds to the old method and can be a keyword ("auto", "raw"
  or "name__class"), a function or a character vector of class names.  The
  second may be a function which is used to transform all data frames input
  to the data base prior to sending them to the data base.

o automatic searching for spatialite is no longer performed.  It seems less
  useful now that RSQLite.extfunctions is automatically loaded.  To use
  the spatialite extension specify its path using the dll argument.

o sqldf has a new optional argument verbose which gives more output if
  it is set to TRUE.  Any other value suppresses the extra output.

o filter may be a list whose first component is a command with keywords
  naming the second and subsequent components.  These components are each
  specified as character vectors which are written out to temporary files
  of the indicated names.  This can be used for specifying gawk and other 
  filters/preprocessors of the input file.

o MySQL is now supported (in addition to SQLite, PostgreSQL and h2).

o stringsAsFactors now defaults to FALSE

Version 0.3-5

o global option "sqldf.method" used as default value of method argument.  If
  not set then default is method = "auto", as before.

o extension function from the RSQLite.extfuns package are automatically loaded

o heuristic improved.  It now checks for ambiguous situations and uses "raw"
  for those columns rather than the class of the first match.

Version 0.3-4

o all SQL statements now work with H2 rather than just a subset

Version 0.3-3

o if RpgSQL is loaded or if sqldf drv argument is "RpgSQL" then sqldf will use 
  PostgreSQL database

o database persistance (sqldf without arguments) now works with H2 database
  (previously only SQLite)

o bug fixes

Version 0.3-2

o if RH2 package is loaded then sqldf will use H2 database

Version 0.2-1

o bug fixes

o certain Date conversions which previously required as.Date.numeric from zoo
  package no longer depend on zoo

Version 0.2-0

o column names which are SQL reserved words are no longer mangled

o file.format list can contain a filter which is a batch or shell command
  that filters the input file

o read.csv2.sql is like read.csv.sql but has a default filter which translates 
  each comma in the input file to a dot

o if getOption("sqldf.dll") defaulting to libspatial-1.dll is found on the PATH
  then it will be loaded as an SQLite loadable extension.  With the default this
  gives access to these SQL functions:
  http://www.gaia-gis.it/spatialite/spatialite-sql-2.3.1.html
  The sqldf package does not itself include this or any other SQLite loadable
  extension.  The user must download and place it on the PATH if they wish to 
  use it.  libspatialite-1.dll can be found here:
  http://www.gaia-gis.it/spatialite
  If sqldf does not find the dll on the PATH then sqldf will continue to work 
  but without access to these functions.

Version 0.1-7

o now supports table names with a dot in them provided that they are 
  placed within backquotes

o bug fixes (thanks to Soren Hojsgaard for bug report)

Version 0.1-6

o new command read.csv2.sql

Version 0.1-5

o minor improvement in second example in ?sqldf (thanks to Wacek Kusnierczyk)

o new command read.csv.sql

Version 0.1-4

o removed junk files

Version 0.1-3

o corrected DESCRIPTION file

Version 0.1-2

o searches for and uses "file" objects as well as data frame objects.
  file.format argument or "file.format" attribute on file object
  is a list with arguments accepted by sqliteImportFile.
  [Thanks to Soren Hojsgaard for suggestion to support files.]

o dots in argument list replaced with a single variable x.
  x can be a "character" vector in which case each component is 
  executed by SQLite in turn and result of the last is returned.

o new dbname argument can be specified.  For SQLite it defaults to ":memory:",
  i.e. an embedded data base.  If database does not exist it is created
  and deleted upon exit.  If it does exist then only tables created by sqldf
  are deleted on exit but not the database itself.

o improvements in sqldf.Rd

o MySQL testing

o added a demo illustrating sorting and grouping vs. nested selects

o new example illustrating vector x

o support for POSIXct, Date and chron dates and times

Version 0.1-1

o removed use of subset in favor of subscripts since codetools chokes on it

o added table example to sqldf.Rd

o improved explanation in sqldf.Rd

Version 0.1-0

o initial release

